---
  openapi: "3.0.0"
  paths: 
    /datasets: 
      get: 
        operationId: "datasetsList"
        parameters: []
        responses: 
          200: 
            description: "The list of dataset of the project."
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/Dataset"
        security: 
          - 
            project-secret: []
    /data-exports: 
      post: 
        operationId: "createDataExport"
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CreateDataExportDto"
        responses: 
          201: 
            description: ""
        security: 
          - 
            user-token: []
      get: 
        operationId: "dataExportsList"
        parameters: []
        responses: 
          200: 
            description: "The list of data-exports for the authenticated user."
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/DataExport"
        security: 
          - 
            user-token: []
    /data-exports/{id}: 
      get: 
        operationId: "dataExportRetrieve"
        parameters: 
          - 
            name: "id"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          200: 
            description: "Retreive a data-export with the specified `id` for the authenticated user."
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/DataExport"
        security: 
          - 
            user-token: []
    /oauth/token: 
      post: 
        operationId: "createOAuthToken"
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CreateAccessTokenDto"
        responses: 
          200: 
            description: "The created access token."
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/AccessToken"
        security: 
          - 
            project-secret: []
    /customers: 
      post: 
        operationId: "createCustomer"
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CreateCustomerDto"
        responses: 
          200: 
            description: "The created customer."
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/Customer"
        security: 
          - 
            project-secret: []
      get: 
        operationId: "customersList"
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CreateCustomerDto"
        responses: 
          200: 
            description: "The list of customers of the project."
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/Customer"
        security: 
          - 
            project-secret: []
    /data-export-links: 
      post: 
        operationId: "createDataExportLink"
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CreateDataExportLinkDto"
        responses: 
          201: 
            description: "The created data export link."
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/DataExportLink"
        security: 
          - 
            project-secret: []
    /data-export-datasets/{id}: 
      get: 
        operationId: "dataExportDatasetRetrieve"
        parameters: 
          - 
            name: "id"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          200: 
            description: "Retreive a data-export-dataset with the specified `id` for the authenticated user."
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/DataExportDataset"
        security: 
          - 
            user-token: []
    /data-export-datasets/{id}/download: 
      post: 
        operationId: "createDataExportDatasetDownload"
        parameters: 
          - 
            name: "id"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          200: 
            description: "Get a download link for the given data-export-dataset."
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/DataExportDatasetDownload"
        security: 
          - 
            user-token: []
  info: 
    title: "Interopdata API"
    description: "The Interopdata public API"
    version: "0.0.1"
    contact: {}
  tags: 
    - 
      name: "interopdata"
      description: ""
  servers: 
    - 
      url: "https://api.interopdata.com"
  components: 
    securitySchemes: 
      user-token: 
        scheme: "bearer"
        bearerFormat: "auth-scheme"
        type: "http"
        description: "Bearer HTTP authentication. Authorization: Bearer <access_token>"
      project-secret: 
        scheme: "bearer"
        bearerFormat: "auth-scheme"
        type: "http"
        description: "Bearer HTTP authentication. Authorization: Bearer <api_key>"
    schemas: 
      Dataset: 
        type: "object"
        properties: 
          id: 
            type: "string"
          slug: 
            type: "string"
          name: 
            type: "string"
          description: 
            type: "string"
          icon: 
            type: "string"
          contentType: 
            type: "string"
        required: 
          - "id"
          - "slug"
          - "name"
          - "description"
          - "icon"
          - "contentType"
      CreateDataExportDto: 
        type: "object"
        properties: 
          datasets: 
            description: "The list of slug of the datasets to export"
            example: 
              - "dataset-1"
              - "dataset-2"
            type: "array"
            items: 
              type: "string"
        required: 
          - "datasets"
      DataExportDataset: 
        type: "object"
        properties: 
          id: 
            type: "string"
          name: 
            type: "string"
          description: 
            type: "string"
          icon: 
            type: "string"
          status: 
            type: "string"
          size: 
            type: "string"
        required: 
          - "id"
          - "name"
          - "description"
          - "icon"
          - "status"
      DataExport: 
        type: "object"
        properties: 
          id: 
            type: "string"
          createdAt: 
            type: "string"
          datasets: 
            type: "array"
            items: 
              $ref: "#/components/schemas/DataExportDataset"
        required: 
          - "id"
          - "createdAt"
          - "datasets"
      CreateAccessTokenDto: 
        type: "object"
        properties: 
          grant_type: 
            type: "string"
            description: "The OAuth grant type. Must be \"authorization_code\"."
            example: "authorization_code"
          code: 
            type: "string"
            description: "The OAuth exchange code."
          ip: 
            type: "string"
            description: "The source IP address of the exchange request."
        required: 
          - "grant_type"
          - "code"
      AccessToken: 
        type: "object"
        properties: 
          customerId: 
            type: "string"
            description: ""
          accessToken: 
            type: "string"
            description: ""
          expiredAt: 
            type: "string"
            description: "A string representing the token expiration date in the ISO 8601 format according to universal time."
            example: "2023-04-13T17:43:08.159Z"
        required: 
          - "customerId"
          - "accessToken"
          - "expiredAt"
      CreateCustomerDto: 
        type: "object"
        properties: 
          id: 
            type: "string"
            description: "A unique identifier of the customer in your system."
            example: "123456"
          email: 
            type: "string"
            example: "john@doe.com"
            description: "Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters."
          name: 
            type: "string"
            example: "John Doe"
            description: "The customer’s full name or business name."
          description: 
            type: "string"
            example: ""
            description: "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard."
          metadata: 
            type: "object"
            description: "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
          preferredLocales: 
            example: 
              - "en-US"
              - "fr-FR"
            description: "Customer’s preferred languages, ordered by preference."
            type: "array"
            items: 
              type: "string"
        required: 
          - "id"
      Customer: 
        type: "object"
        properties: 
          id: 
            type: "string"
            description: "A unique identifier of the customer in your system."
          email: 
            type: "object"
            description: "Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters."
            nullable: true
          description: 
            type: "object"
            nullable: true
          metadata: 
            type: "object"
            description: "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
          preferredLocales: 
            description: "Customer’s preferred languages, ordered by preference."
            type: "array"
            items: 
              type: "string"
        required: 
          - "id"
          - "email"
          - "description"
          - "metadata"
          - "preferredLocales"
      CreateDataExportLinkDto: 
        type: "object"
        properties: 
          customerId: 
            type: "string"
            description: "The id of the customer associated with the data-export link. Must be specified if `customer` is not."
            example: "123456"
          customer: 
            description: "The created or update customer associated with the data-export link. Must be specified if `customerId` is not."
            allOf: 
              - 
                $ref: "#/components/schemas/CreateCustomerDto"
      DataExportLink: 
        type: "object"
        properties: 
          url: 
            type: "string"
            description: "The URL of the data-export link. The root part is assocaited project `Redirect URL`. You should point your user to this URL."
        required: 
          - "url"
      DataExportDatasetDownload: 
        type: "object"
        properties: 
          size: 
            type: "number"
          filename: 
            type: "string"
          url: 
            type: "string"
          contentType: 
            type: "string"
        required: 
          - "size"
          - "filename"
          - "url"
          - "contentType"

